{"version":3,"sources":["src/qrCodeScanner.js"],"names":["video","document","createElement","canvasElement","getElementById","canvas","getContext","qrResult","outputData","btnScanQR","btnToggleCamera","innerText","body","appendChild","scanning","currentCamera","qrcode","callback","res","srcObject","getTracks","forEach","track","stop","hidden","onclick","navigator","mediaDevices","getUserMedia","facingMode","then","stream","setAttribute","play","tick","scan","height","videoHeight","width","videoWidth","drawImage","requestAnimationFrame","decode","e","setTimeout"],"mappings":"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","file":"qrCodeScanner.38eac474.js","sourceRoot":"..","sourcesContent":["const video = document.createElement(\"video\");\r\nconst canvasElement = document.getElementById(\"qr-canvas\");\r\nconst canvas = canvasElement.getContext(\"2d\");\r\n\r\nconst qrResult = document.getElementById(\"qr-result\");\r\nconst outputData = document.getElementById(\"outputData\");\r\nconst btnScanQR = document.getElementById(\"btn-scan-qr\");\r\n\r\nconst btnToggleCamera = document.createElement(\"button\");\r\nbtnToggleCamera.innerText = \"Cambiar a cámara frontal\";\r\ndocument.body.appendChild(btnToggleCamera);\r\n\r\nlet scanning = false;\r\nlet currentCamera = \"environment\";\r\n\r\nqrcode.callback = res => {\r\n  if (res) {\r\n    outputData.innerText = res;\r\n    scanning = false;\r\n\r\n    video.srcObject.getTracks().forEach(track => {\r\n      track.stop();\r\n    });\r\n\r\n    qrResult.hidden = false;\r\n    canvasElement.hidden = true;\r\n    btnScanQR.hidden = false;\r\n  }\r\n};\r\n\r\nbtnScanQR.onclick = () => {\r\n  navigator.mediaDevices\r\n    .getUserMedia({ video: { facingMode: currentCamera } })\r\n    .then(function(stream) {\r\n      scanning = true;\r\n      qrResult.hidden = true;\r\n      btnScanQR.hidden = true;\r\n      canvasElement.hidden = false;\r\n      video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\r\n      video.srcObject = stream;\r\n      video.play();\r\n      tick();\r\n      scan();\r\n    });\r\n};\r\n\r\nbtnToggleCamera.onclick = () => {\r\n  currentCamera = currentCamera === \"user\" ? \"environment\" : \"user\";\r\n  btnToggleCamera.innerText = currentCamera === \"user\" ? \"Cambiar a cámara trasera\" : \"Cambiar a cámara frontal\";\r\n\r\n  video.srcObject.getTracks().forEach(track => {\r\n    track.stop();\r\n  });\r\n\r\n  navigator.mediaDevices\r\n    .getUserMedia({ video: { facingMode: currentCamera } })\r\n    .then(function(stream) {\r\n      video.srcObject = stream;\r\n      video.play();\r\n    });\r\n};\r\n\r\nfunction tick() {\r\n  canvasElement.height = video.videoHeight;\r\n  canvasElement.width = video.videoWidth;\r\n  canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);\r\n\r\n  scanning && requestAnimationFrame(tick);\r\n}\r\n\r\nfunction scan() {\r\n  try {\r\n    qrcode.decode();\r\n  } catch (e) {\r\n    setTimeout(scan, 300);\r\n  }\r\n}\r\n"]}