{"version":3,"sources":["src/qrCodeScanner.js"],"names":["video","document","createElement","canvasElement","getElementById","canvas","getContext","qrResult","outputData","btnScanQR","btnSwitchCamera","scanning","isMobile","test","navigator","userAgent","mediaDevices","getUserMedia","facingMode","then","hidden","catch","onclick","stream","setAttribute","srcObject","play","tick","scan","constraints","height","videoHeight","width","videoWidth","drawImage","requestAnimationFrame","qrcode","decode","e","setTimeout"],"mappings":"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","file":"qrCodeScanner.38eac474.js","sourceRoot":"..","sourcesContent":["const video = document.createElement(\"video\");\r\nconst canvasElement = document.getElementById(\"qr-canvas\");\r\nconst canvas = canvasElement.getContext(\"2d\");\r\nconst qrResult = document.getElementById(\"qr-result\");\r\nconst outputData = document.getElementById(\"outputData\");\r\nconst btnScanQR = document.getElementById(\"btn-scan-qr\");\r\nconst btnSwitchCamera = document.getElementById(\"btn-switch-camera\");\r\nlet scanning = false;\r\nlet isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\r\nif (isMobile) {\r\n  // Si es un dispositivo móvil, comprobar si tiene cámara frontal\r\n  navigator.mediaDevices.getUserMedia({ video: { facingMode: \"user\" } })\r\n    .then(function() {\r\n      btnSwitchCamera.hidden = false; // Mostrar el botón si tiene cámara frontal\r\n    })\r\n    .catch(function() {\r\n      btnSwitchCamera.hidden = true; // Ocultar el botón si no tiene cámara frontal\r\n    });\r\n} else {\r\n  // Si no es un dispositivo móvil, ocultar el botón\r\n  btnSwitchCamera.hidden = true;\r\n}\r\n\r\nbtnScanQR.onclick = () => {\r\n  navigator.mediaDevices\r\n    .getUserMedia({ video: { facingMode: \"environment\" } })\r\n    .then(function(stream) {\r\n      scanning = true;\r\n      qrResult.hidden = true;\r\n      btnScanQR.hidden = true;\r\n      canvasElement.hidden = false;\r\n      video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\r\n      video.srcObject = stream;\r\n      video.play();\r\n      tick();\r\n      scan();\r\n    });\r\n};\r\n\r\nbtnSwitchCamera.onclick = () => {\r\n  let constraints = { video: { facingMode: \"user\" } };\r\n  navigator.mediaDevices\r\n    .getUserMedia(constraints)\r\n    .then(function(stream) {\r\n      video.srcObject = stream;\r\n      video.play();\r\n    });\r\n};\r\n\r\nfunction tick() {\r\n  canvasElement.height = video.videoHeight;\r\n  canvasElement.width = video.videoWidth;\r\n  canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);\r\n  scanning && requestAnimationFrame(tick);\r\n}\r\n\r\nfunction scan() {\r\n  try {\r\n    qrcode.decode();\r\n  } catch (e) {\r\n    setTimeout(scan, 300);\r\n  }\r\n}\r\n"]}